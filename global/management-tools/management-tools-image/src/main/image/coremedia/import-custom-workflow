#!/bin/sh

echo "[DOCKER ENTRYPOINT] - entering $0"
set -eu
if [ "${DEBUG_ENTRYPOINT}" = "true" ]; then
  echo "[DOCKER ENTRYPOINT] - DEBUG_ENTRYPOINT detected, all commands will be printed"
  set -x
fi

# This script expects one parameter defining the workflow definition. The parameter has to be of the form:
# <DEFINITON_NAME>:<DEFINITION_PATH>

CUSTOM_WORKFLOW_DEFINITION=$1
shift

# get name and path of the definition
WORKFLOW_NAME=$(echo $CUSTOM_WORKFLOW_DEFINITION | awk -F: '{print $1}')
WORKFLOW_PATH=$(echo $CUSTOM_WORKFLOW_DEFINITION | awk -F: '{print $2}')

# get all names of currently imported processdefinitions
WORKFLOWS_FOUND="$(./tools/bin/cm processdefinitions -u ${TOOLS_USER} -p ${TOOLS_PASSWORD} 2> /dev/null| grep processdefinition | awk '{print substr($4, 1, length($4)-1)}')"

if ! `echo "$WORKFLOWS_FOUND" | grep -w $WORKFLOW_NAME > /dev/null` || [ "${FORCE_REIMPORT_CONTENT}" = "true" ]; then
  echo "[DOCKER ENTRYPOINT] - importing custom workflow $WORKFLOW_NAME from $WORKFLOW_PATH"
  ./tools/bin/cm upload -u ${TOOLS_USER} -p ${TOOLS_PASSWORD} -f ${WORKFLOW_PATH} 2> /dev/null
else
  echo "[DOCKER ENTRYPOINT] - $WORKFLOW_NAME already imported, skipping."
fi

test $# -gt 0 && exec ./$@ || echo "[DOCKER ENTRYPOINT] - entrypoint chain finished"
