# syntax=docker/dockerfile:1.3

FROM node:16 as tooling-image

# pnpm 6.x
RUN npm install -g pnpm@6.16.1


FROM tooling-image as audit-task
WORKDIR /ws-root/frontend
COPY . /ws-root/frontend
RUN echo '' > /tmp/audit.log
RUN echo '' > /tmp/audit.json
ARG AUDIT_LEVEL=high
RUN pnpm audit --audit-level=${AUDIT_LEVEL} > /tmp/audit.log || pnpm audit --json --audit-level=${AUDIT_LEVEL} > /tmp/audit.json || true


FROM scratch as audit-stage
COPY --from=audit-task /tmp/audit.log /audit.log
COPY --from=audit-task /tmp/audit.json /audit.json


FROM tooling-image as build-task
WORKDIR /ws-root/frontend
COPY . /ws-root/frontend

# install
RUN --mount=type=secret,mode=0644,id=npmrc,target=/ws-root/apps/studio-client/.npmrc pnpm install
# build
RUN pnpm build
# zip
RUN pnpm build-frontend-zip
# test
ARG SKIP_TESTS
RUN if [ "${SKIP_TESTS:-false}" = "true" ] ; then echo "Skip tests." ; else pnpm test || true; fi
# cleanup
RUN find /ws-root/frontend -name "node_modules" -type d -exec rm -rf {} +


FROM scratch as build-stage
COPY --from=build-task /ws-root/frontend/target/frontend.zip /frontend.zip
