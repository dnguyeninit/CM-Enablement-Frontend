<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.coremedia.blueprint</groupId>
    <artifactId>cae-feeder.search</artifactId>
    <version>1-SNAPSHOT</version>
  </parent>

  <artifactId>caefeeder-lib</artifactId>

  <description>CAE Feeder extensions that are common for the preview and live environment</description>

  <dependencies>

    <!-- RUNTIME SCOPE -->

    <dependency>
      <groupId>com.coremedia.blueprint</groupId>
      <artifactId>solr-search</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- COMPILE SCOPE -->

    <dependency>
      <groupId>com.coremedia.blueprint</groupId>
      <artifactId>contentbeans</artifactId>
    </dependency>

    <dependency>
      <groupId>com.coremedia.blueprint.base</groupId>
      <artifactId>bpbase-caefeeder</artifactId>
    </dependency>

    <dependency>
      <groupId>com.coremedia.blueprint.base</groupId>
      <artifactId>bpbase-navigation-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-persistentcache</artifactId>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-unified-api</artifactId>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-delivery-configuration</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cae-contentbeanservices</artifactId>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-feeder-api</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>coremedia-spring</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- PROVIDED SCOPE -->
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--
      Actually, we need the servlet-api only transitively for the TestInfrastructureBuilder
      used e.g. in TaxonomyIdsPropertyConverterTest.  However, we generally need the servlet-api
      with scope "provided", and due to the subtle semantics of transitive scopes
      (s. http://www.sonatype.com/books/mvnref-book/reference/pom-relationships-sect-project-dependencies.html#pom-relationships-sect-transitive )
      we
      a) must declare it here
      b) must declare it with scope provided
    -->
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.servlet.jsp.jstl</groupId>
      <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- TEST SCOPE -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-client-xml</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>coremedia-xml</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.blueprint</groupId>
      <artifactId>test-util</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <ignoredDependencies combine.children="append">
            <!-- Transitive compile *AND* direct test dependencies. -->
            <ignoredDependency>com.coremedia.cms:cap-persistentcache</ignoredDependency>
          </ignoredDependencies>
          <failOnWarning>true</failOnWarning>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
